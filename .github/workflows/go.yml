name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      ftp:
        image: delfer/alpine-ftp-server
        ports:
          - 21:21
          - 30000-30009:30000-30009
        options: >-
          --env USERS=testuser|testpassword
          --env ADDRESS=0.0.0.0
          --health-cmd "nc -zv localhost 21"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    environment: devel
    env:
      REGISTRY: docker.io
      REPOSITORY: ${{ secrets.REPOSITORY }}
      REPO_USERNAME: ${{ secrets.REPO_USERNAME }}
      REPO_PASSWORD: ${{ secrets.REPO_PASSWORD }}

    steps:
    - uses: actions/checkout@v4

    - name: üöÄ Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.3'

    - name: üßä Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: ‚öôÔ∏è Install dependencies
      run: task setup

    - name: üî® Build
      run: task build

    - name: Debug FTP server
      run: |
        echo "Checking if FTP server is running..."
        nc -zv localhost 21
        echo "FTP server status:"
        docker ps -a
        echo "Docker logs for FTP container:"
        CONTAINER_ID=$(docker ps -q --filter 'ancestor=delfer/alpine-ftp-server')
        docker logs $CONTAINER_ID

    - name: üîç Test
      run: task test
