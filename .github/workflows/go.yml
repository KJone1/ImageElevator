name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      ftp:
        image: delfer/alpine-ftp-server
        ports:
          - 21:21
          - 30000-30009:30000-30009
        options: >-
          --env USERS=testuser|testpassword
          --env ADDRESS=0.0.0.0
          --health-cmd "nc -zv localhost 21"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    environment: devel
    env:
      REGISTRY: docker.io
      REPOSITORY: ${{ secrets.REPOSITORY }}
      REPO_USERNAME: ${{ secrets.REPO_USERNAME }}
      REPO_PASSWORD: ${{ secrets.REPO_PASSWORD }}

    steps:
    - uses: actions/checkout@v4

    #- name: 🚀 Set up Go
    #  uses: actions/setup-go@v4
    #  with:
     #   go-version: '1.22.3'

    #- name: 🧊 Install Task
    #  uses: arduino/setup-task@v1
    #  with:
     #   version: 3.x
     #   repo-token: ${{ secrets.GITHUB_TOKEN }}

    #- name: ⚙️ Install dependencies
     # run: task setup

    #- name: 🔨 Build
     # run: task build

    - name: Install lftp
      run: sudo apt-get update && sudo apt-get install -y lftp

    - name: Run tests
      run: |
        # Run your tests here
        # For example, you can use lftp to interact with the FTP server
        lftp -u testuser,testpassword -e "ls; bye" ftp://localhost:21

    #- name: 🔍 Test
     # run: lftp -u testuser,password -e "ls; bye" ftp://localhost:21
