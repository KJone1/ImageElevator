version: '3'

silent: true

vars:
  CONTAINER_RUNTIME: "docker"
  PS_FILTER: "--filter 'name=ftp'"
  CONTAINER_ID: "{{ .CONTAINER_RUNTIME }} ps -q {{ .PS_FILTER }}"

tasks:
  default:
    desc: Runs 'task help'.
    cmds:
      - task help

  help:
    desc: Display this help msg.
    cmds:
      - task -a

  dev:
    desc: Run in dev mode with hot reloading.
    cmds:
      - air

  $external_deps:
    desc: Download external project dependencies.
    platforms:
      - linux
    internal: true
    cmds:
      - sudo apt-get update
      - sudo apt-get install -y
      - sudo apt-get install libbtrfs-dev -y
      - sudo apt-get install libgpgme-dev -y

  setup:
    desc: Download project dependencies.
    deps:
      - $external_deps
    cmds:
      - go mod tidy

  run:
    desc: Run in production mode.
    env:
      GIN_MODE: release
    cmds:
      - go run main.go

  build:
    desc: Build binary.
    cmds:
      - go build .

  $setup_ftp_server:
    internal: true
    preconditions:
      - sh: '{{ .CONTAINER_RUNTIME }} -v'
        msg: "CONTAINER_RUNTIME Not Found, Cant run FTP unit tests"
    cmds:
      - |
          {{ .CONTAINER_RUNTIME }} run -d -p 21:21 -p 21000-21010:21000-21010 \
          --env USERS="testuser|testpassword|/" \
          --env ADDRESS=0.0.0.0 \
          --name ftp_server \
          delfer/alpine-ftp-server:latest@sha256:8f63d017e25ac17fb1b5c109fff82b8bb88e42f33ea81c0a4849f955b521e87d
      - "{{ .CONTAINER_RUNTIME }} ps {{ .PS_FILTER }}"
      - echo "Docker logs for FTP container:"
      - "{{ .CONTAINER_RUNTIME }} logs  $({{ .CONTAINER_ID }})"
      - echo "Checking if FTP server is running..."
      - sleep 5
      - nc -z localhost 21

  test:
    desc: Run unit tests.
    deps:
      - $setup_ftp_server
    cmds:
      - defer: "{{ .CONTAINER_RUNTIME }} rm -f $({{ .CONTAINER_ID }})"
      - go test -v ./...

